
import numpy as np

from .mathematics_python import *


class Fourier(object):
   
   @staticmethod
   def Transform(G, f_entry, dt, start, end, inverse = False):
      F = G

      #creating a temporary ApproxFunction
      if not isinstance(G, ComplexApproxFunction):
         t = np.arange(start, end, dt)
         g = G(t)
         F = ComplexApproxFunction(t, g, 0, 0)
         
      return fourier_transform(F, f_entry, dt, start, end, inverse)
